{"version":3,"sources":["./src/app/components/modal/modal.component.ts","./src/app/components/modal/modal.component.html","./src/app/models/TimerStatus.ts","./src/environments/environment.ts","./src/app/components/timer/timer.component.ts","./src/app/components/timer/timer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/words.service.ts","./src/app/app.module.ts","./src/app/components/stats/stats.component.ts","./src/app/components/stats/stats.component.html","./src/app/components/input-box/input-box.component.ts","./src/app/components/input-box/input-box.component.html","./src/app/models/TypedWord.ts","./src/app/services/interaction.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {InteractionService} from '../../services/interaction.service';\nimport {TimerStatus} from '../../models/TimerStatus';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n\n  showModal = false;\n  correctWords: number;\n  correctChars: number;\n  accuracy: number;\n\n  constructor(private interactionService: InteractionService) { }\n\n  ngOnInit(): void {\n    this.interactionService.getCorrectWords()\n      .subscribe(words => this.correctWords = words);\n    this.interactionService.getCorrectChars()\n      .subscribe(chars => this.correctChars = chars);\n    this.interactionService.getAccuracy()\n      .subscribe(accuracy => this.accuracy = accuracy);\n    this.interactionService.getTimerStatus()\n      .subscribe(status => {\n        if (status === TimerStatus.OFF) {\n          this.showModal = true;\n        }\n      });\n  }\n\n  onOpenButtonClick(): void {\n    this.showModal = true;\n  }\n\n  onCloseButtonClick(): void {\n    this.interactionService.incrTestCounter();\n    this.showModal = false;\n  }\n}\n","<button id=\"open\" (click)=\"onOpenButtonClick()\">Open</button>\n<div id=\"modal-container\" class=\"modal-container\" [ngClass]=\"{'show': showModal}\">\n  <div class=\"modal\" [ngClass]=\"{'show': showModal}\">\n    <div *ngIf=\"correctWords < 30; then thenBlock else elseBlock\"></div>\n    <ng-template #thenBlock>\n      <img src=\"./assets/rocket-1.svg\" alt=\"rocket\" width=\"250\"/>\n      <h2>This was a static fire test, right?</h2>\n      <p>\n        Well... You type with the speed of <span class=\"highlight\">{{ correctWords }} WPM</span> ({{ correctChars }} CPM). Your accuracy was <span class=\"bold\">{{ accuracy }}%</span>. It could be better!\n      </p>\n    </ng-template>\n    <ng-template #elseBlock>\n      <img src=\"./assets/rocket-2.svg\" alt=\"rocket\" width=\"250\"/>\n      <h2>You're a Rocket!</h2>\n      <p>\n        Nice! You type with the speed of <span class=\"highlight\">{{ correctWords }} WPM</span> ({{ correctChars }} CPM). Your accuracy was <span class=\"bold\">{{ accuracy }}%</span>. Keep practicing!\n      </p>\n    </ng-template>\n    <button id=\"close\" (click)=\"onCloseButtonClick()\">Try again</button>\n  </div>\n</div>\n","export enum TimerStatus {\n  OFF,\n  ON,\n  DEFAULT\n}\n","export const environment = {\n  production: true\n};\n","import {Component, OnInit} from '@angular/core';\nimport {InteractionService} from '../../services/interaction.service';\nimport {TimerStatus} from '../../models/TimerStatus';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css']\n})\nexport class TimerComponent implements OnInit {\n\n  timerInterval = null;\n  timeLeft = '60';\n\n  constructor(private interactionService: InteractionService) { }\n\n  ngOnInit(): void {\n    this.interactionService.getTimerStatus()\n      .subscribe(status => {\n        if (status === TimerStatus.DEFAULT) {\n          this.stopTimer();\n          this.timeLeft = '60';\n        }\n        if (status === TimerStatus.ON) {\n          this.startTimer();\n        }\n      });\n  }\n\n  private myTimer(d0: number): void {\n    // get current time\n    const d = (new Date()).valueOf();\n    const startValue = 60000;\n    const diff = startValue - (d - d0);\n    const seconds: number = Math.floor(diff / 1000);\n\n    this.timeLeft = seconds.toString();\n    if (this.timeLeft.length === 1) {\n      this.timeLeft = '0' + seconds;\n    }\n    if (seconds === 0) {\n      this.stopTimer();\n      this.interactionService.setTimerStatus(TimerStatus.OFF);\n    }\n  }\n\n  startTimer(): void {\n    // get current time\n    const d0 = (new Date()).valueOf();\n\n    if (this.timerInterval !== null) {\n      clearInterval(this.timerInterval);\n    }\n\n    this.timerInterval = setInterval(() => {\n      this.myTimer(d0);\n    }, 100);\n  }\n\n  stopTimer(): void {\n    clearInterval(this.timerInterval);\n  }\n\n}\n","<div class=\"timer-wrapper\">\n  <p class=\"timer\">{{ timeLeft }}<p>\n  <p class=\"timer-label\">seconds</p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<div class=\"content-wrapper\">\n  <div class=\"header\">\n    <h1>Typing Test</h1>\n    <h3>Test your typing skills</h3>\n  </div>\n  <div class=\"stats-wrapper\">\n    <app-stats></app-stats>\n    <app-timer></app-timer>\n  </div>\n  <app-input-box id=\"input-box\"></app-input-box>\n</div>\n<app-modal></app-modal>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Word} from '../models/Word';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WordsService {\n\n  springApi = 'api/v1';\n\n  constructor(private http: HttpClient) { }\n\n  getWord(): Observable<Word> {\n    return this.http.get<Word>(`${this.springApi}/word`);\n  }\n\n  getWords(num: number): Observable<Word[]> {\n    return this.http.get<Word[]>(`${this.springApi}/words/${num}`);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { InputBoxComponent } from './components/input-box/input-box.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { StatsComponent } from './components/stats/stats.component';\nimport {WordsService} from './services/words.service';\nimport { ModalComponent } from './components/modal/modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputBoxComponent,\n    TimerComponent,\n    StatsComponent,\n    ModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [WordsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {InteractionService} from '../../services/interaction.service';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent implements OnInit {\n\n  correctWords: number;\n  correctChars: number;\n  accuracy: number;\n\n  constructor(private interactionService: InteractionService) { }\n\n  ngOnInit(): void {\n    this.interactionService.getCorrectWords()\n      .subscribe(words => this.correctWords = words);\n    this.interactionService.getCorrectChars()\n      .subscribe(chars => this.correctChars = chars);\n    this.interactionService.getAccuracy()\n      .subscribe(accuracy => this.accuracy = accuracy);\n  }\n\n}\n","<div class=\"stats-container\">\n  <div class=\"stat-wrapper\">\n    <p class=\"stat\">{{ correctWords }}</p>\n    <p class=\"stat-label\">words/min</p>\n  </div>\n  <div class=\"stat-wrapper\">\n    <p class=\"stat\">{{ correctChars }}</p>\n    <p class=\"stat-label\">chars/min</p>\n  </div>\n  <div class=\"stat-wrapper\">\n    <p class=\"stat\">{{ accuracy }}</p>\n    <p class=\"stat-label\">% accuracy</p>\n  </div>\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Word} from '../../models/Word';\nimport {WordsService} from '../../services/words.service';\nimport {TypedWord} from '../../models/TypedWord';\nimport {InteractionService} from '../../services/interaction.service';\nimport {TimerStatus} from '../../models/TimerStatus';\n\n@Component({\n  selector: 'app-input-box',\n  templateUrl: './input-box.component.html',\n  styleUrls: ['./input-box.component.css']\n})\nexport class InputBoxComponent implements OnInit {\n\n  @ViewChild('testInput') testInput: ElementRef;\n\n  words: Word[];\n  typedWords: TypedWord[];\n  currentWord: string = null;\n  flagWrongWord = false;\n  timerStatus: TimerStatus;\n  correctWordsCounter: number;\n  correctCharsCounter: number;\n\n  constructor(private wordsService: WordsService, private interactionService: InteractionService) { }\n\n  ngOnInit(): void {\n    this.interactionService.getTimerStatus()\n      .subscribe(status => {\n        this.timerStatus = status;\n        if (status === TimerStatus.OFF) {\n          // unfocus test-input\n          document.getElementById('test-input').blur();\n        }\n      });\n    this.interactionService.getCorrectWords()\n      .subscribe(words => this.correctWordsCounter = words);\n    this.interactionService.getCorrectChars()\n      .subscribe(chars => this.correctCharsCounter = chars);\n    this.interactionService.getTestCounter()\n      .subscribe(() => this.restartTest());\n    this.typedWords = [];\n    // set input focus\n    this.setFocus();\n    this.retrieveWords();\n  }\n\n  restartTest(): void {\n    this.retrieveWords();\n    this.typedWords = [];\n    this.currentWord = null;\n    this.flagWrongWord = false;\n    this.interactionService.setTimerStatus(TimerStatus.DEFAULT);\n    this.interactionService.setCorrectWords(0);\n    this.interactionService.setCorrectChars(0);\n    this.interactionService.setTotalWords(0);\n    document.getElementById('test-input').textContent = '';\n    this.setFocus();\n  }\n\n  setFocus(): void {\n    document.getElementById('test-input').focus();\n    this.setCaretPosition('test-input', null);\n  }\n\n  private retrieveWord(): void {\n    this.wordsService.getWord().subscribe(word => this.words.push(word));\n  }\n\n  private retrieveWords(): void {\n    this.wordsService.getWords(10).subscribe(words => {\n      this.words = words;\n      this.words.forEach(word => console.log(word));\n    });\n  }\n\n  /**\n   * Handle {@link KEY_CODE} event\n   * @param event the event to handle\n   */\n  onKeyDown(event: KeyboardEvent): void {\n    const inputValue = (event.target as HTMLElement).textContent;\n    if (event.code === KEY_CODE.ENTER || event.code === KEY_CODE.SPACE) {\n      event.preventDefault();\n      event.stopPropagation();\n      // add typed word inside typedWords array\n      if (inputValue !== '') {\n        const tw = new TypedWord();\n        tw.word = inputValue;\n        tw.isCorrect = inputValue === this.currentWord;\n        this.typedWords.push(tw);\n        // share data with stats component\n        if (tw.isCorrect === true) {\n          this.correctWordsCounter++;\n          this.interactionService.setCorrectWords(this.correctWordsCounter);\n          this.correctCharsCounter = this.correctCharsCounter + tw.word.length;\n          this.interactionService.setCorrectChars(this.correctCharsCounter);\n        }\n        this.interactionService.setTotalWords(this.typedWords.length);\n        // remove first item of the words array\n        this.words.shift();\n        // set to null the current word\n        this.currentWord = null;\n        // clear input value\n        (event.target as HTMLElement).textContent = '';\n        // set the incorrectness of the word to default\n        this.flagWrongWord = false;\n\n        this.retrieveWord();\n      }\n    } else if (event.code === KEY_CODE.BACKSPACE) {\n      if (inputValue === this.currentWord.substr(0, inputValue.length)) {\n        this.words[0].word = inputValue.charAt(inputValue.length - 1).concat(this.words[0].word);\n      }\n    } else if (event.code === KEY_CODE.ARROW_UP\n      || event.code === KEY_CODE.ARROW_DOWN\n      || event.code === KEY_CODE.ARROW_LEFT\n      || event.code === KEY_CODE.ARROW_RIGHT) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Handle typed characters\n   * @param event the event to handle\n   */\n  onInput(event: Event): void {\n    // set the new current word\n    if (this.currentWord === null) {\n      this.currentWord = this.words[0].word;\n    }\n    // start the timer\n    if (this.timerStatus === TimerStatus.DEFAULT || this.timerStatus === TimerStatus.OFF) {\n      this.interactionService.setTimerStatus(TimerStatus.ON);\n    }\n    this.checkCharacter(event);\n  }\n\n  /**\n   * Check the validity of the character\n   * @param event the event containing the character to check\n   * @private\n   */\n  private checkCharacter(event: Event): void {\n    const inputEvent = event as InputEvent;\n    const inputType = inputEvent.inputType;\n    const inputValue = (event.target as HTMLElement).textContent;\n    if (inputValue === this.currentWord.substr(0, inputValue.length)) {\n      if (inputType !== 'deleteContentBackward') {\n        this.words[0].word = this.words[0].word.substring(1);\n        this.flagWrongWord = false;\n      } else if (inputType === 'deleteContentBackward') {\n        this.flagWrongWord = false;\n      }\n    } else {\n      this.flagWrongWord = true;\n    }\n  }\n\n  /**\n   * Set focus on .main-container click\n   */\n  onMainContainerClick(): void {\n    this.setFocus();\n  }\n\n  /**\n   * Ignore the mouse click\n   * @param event the click to ignore\n   */\n  onMouseDown(event: MouseEvent): void {\n    this.setFocus();\n    event.preventDefault();\n  }\n\n  /**\n   * Ignore the tap on touch devices\n   * @param event the tap to ignore\n   */\n  onTouchStart(event: TouchEvent): void {\n    this.setFocus();\n    event.preventDefault();\n  }\n\n  /**\n   * Set the caret position\n   * @param elemId id of the html element\n   * @param caretPos the position of the caret\n   */\n  setCaretPosition(elemId: string, caretPos: number): void {\n    if (caretPos === null) {\n      caretPos = document.getElementById(elemId).textContent.length;\n    }\n    const el = document.getElementById(elemId);\n    const range = document.createRange();\n    const sel = window.getSelection();\n    if (el.childNodes[0]) {\n      range.setStart(el.childNodes[0], caretPos);\n      range.collapse(true);\n\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }\n\n}\n\nenum KEY_CODE {\n  SPACE = 'Space',\n  ENTER = 'Enter',\n  BACKSPACE = 'Backspace',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n  ARROW_LEFT = 'ArrowLeft',\n  ARROW_RIGHT = 'ArrowRight'\n}\n","<div class=\"main-container\" (click)=\"onMainContainerClick()\">\n  <div class=\"typed-words-container\">\n    <div class=\"whitespace-no-wrap\">\n      <span *ngFor=\"let typedWord of typedWords\" [ngClass]=\"{'wrong-word': !typedWord.isCorrect}\">{{ typedWord.word }}</span>\n      <div #testInput id=\"test-input\" tabindex=\"1\" contenteditable=\"true\" autocapitalize=\"off\" autocomplete=\"off\" autocorrect=\"off\" spellcheck=\"false\" (input)=\"onInput($event)\" (keydown)=\"onKeyDown($event)\" (mousedown)=\"onMouseDown($event)\" (touchstart)=\"onTouchStart($event)\" [ngClass]=\"{'wrong-word': flagWrongWord}\"></div>\n    </div>\n  </div>\n  <div class=\"words-container\">\n    <span *ngFor=\"let word of words\">{{ word.word }}</span>\n  </div>\n</div>\n","export class TypedWord {\n  word: string;\n  isCorrect: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {TimerStatus} from '../models/TimerStatus';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractionService {\n\n  private timerStatus = new BehaviorSubject<TimerStatus>(TimerStatus.DEFAULT);\n  private correctWords = new BehaviorSubject<number>(0);\n  private correctChars = new BehaviorSubject<number>(0);\n  private totalWords = new BehaviorSubject<number>(0);\n  private accuracy = new BehaviorSubject<number>(0);\n  private testCounter = new BehaviorSubject<number>(0);\n\n  constructor() { }\n\n  setTimerStatus(status: TimerStatus): void {\n    this.timerStatus.next(status);\n  }\n\n  getTimerStatus(): Observable<TimerStatus> {\n    return this.timerStatus.asObservable();\n  }\n\n  setCorrectWords(words: number): void {\n    this.correctWords.next(words);\n  }\n\n  getCorrectWords(): Observable<number> {\n    return this.correctWords.asObservable();\n  }\n\n  setCorrectChars(chars: number): void {\n    this.correctChars.next(chars);\n  }\n\n  getCorrectChars(): Observable<number> {\n    return this.correctChars.asObservable();\n  }\n\n  setTotalWords(totalWords: number): void {\n    this.totalWords.next(totalWords);\n    this.setAccuracy(totalWords);\n  }\n\n  getTotalWords(): Observable<number> {\n    return this.totalWords.asObservable();\n  }\n\n  setAccuracy(totalWords: number): void {\n    if (totalWords === 0) {\n      this.accuracy.next(0);\n    } else {\n      this.accuracy.next(Math.round((this.correctWords.getValue() / totalWords) * 100));\n    }\n  }\n\n  getAccuracy(): Observable<number> {\n    return this.accuracy.asObservable();\n  }\n\n  incrTestCounter(): void {\n    this.testCounter.next(this.testCounter.getValue() + 1);\n  }\n\n  getTestCounter(): Observable<number> {\n    return this.testCounter.asObservable();\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}